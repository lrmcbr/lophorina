<launch>
  <arg name="model" default="$(find lophorina)/urdf/lophorina.urdf"/>
  <arg name="rvizconfig" default="$(find lophorina)/rviz/urdf.rviz" />
  
  <arg name="world_name" default="$(find lophorina)/worlds/lophorina.world"/>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="world_name" value="$(arg world_name)"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" /> 
  
  <rosparam command="load"
            file="$(find lophorina)/config/gain.yaml"
            ns="/gazebo_ros_control" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 1.0 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />

  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" />

  <rosparam command="load"
            file="$(find lophorina)/config/joints.yaml"
            ns="lophorina_joint_state_controller" />
  <rosparam command="load"
            file="$(find lophorina)/config/tilt.yaml"
            ns="lophorina_tilt_controller" />  
  <rosparam command="load"
            file="$(find lophorina)/config/propellers.yaml"
            ns="lophorina_prop_controller" />  

  <node name="lophorina_controller_spawner" pkg="controller_manager" type="spawner"
    args="lophorina_joint_state_controller
          lophorina_tilt_controller
          lophorina_prop_controller"/>

</launch>
